name: 'CI'

on:
  push:
    branches:
      - '*'

  workflow_dispatch:

jobs:

  job-firmware:
    name: 'build firmware'
    runs-on: ubuntu-20.04
    steps:
      - name: 'checkout'
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: 'install packages'
        run: |
          export DEBIAN_FRONTEND=noninteractive
          sudo apt-get update
          sudo apt-get install -y gcc-arm-none-eabi libnewlib-arm-none-eabi dfu-util
          
      - name: 'compile firmware'
        run: env OSNAME=linux OSTYPE=firmware bash ./.github/auto_build.sh

      - name: 'release assets'
        if: startsWith( github.ref, 'refs/tags/releases/')
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: build/*.zip
          tag: ${{ github.ref }}
          overwrite: true
          file_glob: true


  job-linux:
    name: 'build linux'
    runs-on: ubuntu-20.04
    steps:
      - name: 'checkout'
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: 'compile'
        run: env OSNAME=linux OSYTPE=linux bash ./.github/auto_build.sh

      - name: 'release assets'
        if: startsWith( github.ref, 'refs/tags/releases/')
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: build/*.zip
          tag: ${{ github.ref }}
          overwrite: true
          file_glob: true


  job-osx:
    name: 'build macos'
##    runs-on: macos-11.0
    runs-on: macos-10.15
    steps:
      - name: 'checkout'
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: 'compile'
        run: env OSNAME=macos OSTYPE=darwin CC=clang bash ./.github/auto_build.sh

      - name: 'release assets'
        if: startsWith( github.ref, 'refs/tags/releases/')
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: build/*.zip
          tag: ${{ github.ref }}
          overwrite: true
          file_glob: true

  job-windows:
    name: 'build windows'
    runs-on: ubuntu-20.04
    steps:
      - name: 'checkout'
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: 'install packages'
        run: |
          export DEBIAN_FRONTEND=noninteractive
          sudo apt-get update
          sudo apt-get install -y gcc-mingw-w64-i686

      - name: 'compile'
        run: env OSNAME=linux OSTYPE=msys host_alias=i686-w64-mingw32 bash ./.github/auto_build.sh

      - name: 'release assets'
        if: startsWith( github.ref, 'refs/tags/releases/')
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: build/*.zip
          tag: ${{ github.ref }}
          overwrite: true
          file_glob: true

